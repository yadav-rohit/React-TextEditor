{"version":3,"sources":["components/Navbar.js","components/Txtform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","style","href","title","type","id","onClick","modeselect","role","htmlFor","Txtform","useState","text","setText","tsst","backgroundColor","color","value","onChange","event","console","log","target","rows","newtext","toUpperCase","toLowerCase","data","c","document","createElement","download","t","Blob","window","URL","createObjectURL","click","copiedtext","navigator","clipboard","writeText","split","length","App","switchstyle","setvmode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1172e1d1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.style} bg-${props.style}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n              \r\n                </ul>\r\n                  <div className=\"form-check form-switch\">\r\n                  <input className=\"form-check-input\" onClick={props.modeselect} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className={`form-check-label text-${props.style==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">switch mode</label>\r\n                       </div>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","import React ,{useState} from 'react'\r\n\r\nexport default function Txtform(props) {\r\n  const Upclick = () =>{\r\n    console.log(\"upper case was pressed\");\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n  }\r\n  const lowclick = () =>{\r\n    console.log(\"upper case was pressed\");\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n  }\r\n  //copying fxn\r\n  const handlecopy = () =>{\r\n    let copiedtext = text;\r\n     navigator.clipboard.writeText(copiedtext);\r\n  }\r\n  //saving fxn\r\n  const save = () => {\r\n    let data = text;\r\n    let c = document.createElement(\"a\");\r\n    c.download = \"user-text.txt\";\r\n    \r\n    let t = new Blob([data], {\r\n    type: \"text/plain\"\r\n    });\r\n    c.href = window.URL.createObjectURL(t);\r\n    c.click();\r\n    }\r\n  const change_ev = (event) =>{\r\n    console.log(\"Text changed\");\r\n    setText(event.target.value);\r\n  }\r\n  const[text , setText]= useState('');\r\n    return (\r\n     < > \r\n  <div className=\"container mb-3 xl\">\r\n    <h1 className={`text-${props.style==='light'?'dark':'light'}`}>{props.tsst}</h1>\r\n    <textarea className=\"form-control\" style={{backgroundColor: props.style ==='light'?'white':'grey' ,color: props.style ==='light'?'black':'white'}}  value={text} onChange={change_ev} id=\"myBox\" rows=\"8\"></textarea>\r\n  <button className=\"btn btn-primary mx-1 my-2\" onClick={Upclick}>To Uppercase</button>\r\n  <button className=\"btn btn-primary mx-1 my-2\" onClick={lowclick}>To lowercase</button>\r\n  <button className=\"btn btn-primary mx-1 my-2\" onClick={save}>Download .txt file</button>\r\n  <button className=\"btn btn-primary mx-1 my-2\" onClick={handlecopy}>Copy text</button>\r\n  <div className=\"container my-3\">\r\n    <h1>Summary of text</h1>\r\n    <p> {text.split(\" \").length}  Words<br/>\r\n        {text.length} Characters\r\n    </p>\r\n    <p> \r\n      Time required to read - {text.split(\" \").length*0.008} minutes\r\n    </p>\r\n    <h2>\r\n      Preview - <br/>\r\n      </h2>\r\n      <p>{text.length>0?text:\"Enter Text To Preview\"}</p>\r\n    \r\n  </div>\r\n       </div>\r\n       </ >\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Txtform from './components/Txtform';\nimport React, { useState } from 'react'\n\nfunction App() {\n  const [switchstyle , setvmode] = useState('light')\n  const modeselect = () => {\n          if(switchstyle === 'light')\n          {\n            setvmode('dark');\n            document.body.style.backgroundColor= '#360989' ;\n            document.body.style.color= 'white' ;\n          }\n          else{\n            setvmode('light');\n            document.body.style.backgroundColor= 'white' ;\n            document.body.style.color= 'black' ;\n          }\n  }\n  return (\n    < >\n        <Navbar title=\"Text Editor\" style={switchstyle} modeselect={modeselect} />\n          {/* <div className=\" my-3\">\n            <About />\n            </div>          */}\n          <div className=\" my-3\">\n               <Txtform tsst=\"Enter Yout Text To Analyze\" style={switchstyle}/>\n                    </div>            \n  </ >\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}